- name: Create demo kubernetes environment
  hosts: localhost
  gather_facts: yes
  collections:
    - community.kubernetes

  roles:
    - { role: kind,          tags: ["kind"]                }
    - { role: helm,          tags: ["helm"]                }
    - { role: ci,            tags: ["ci"]                  }

  tasks:
    - name: update kind CoreDNS configuration
      k8s:
        state: present
        definition:
          apiVersion: v1
          kind: ConfigMap
          metadata:
            name: coredns
            namespace: kube-system
          data:
            Corefile: |
              .:53 {
                  rewrite name regex (.*)\.{{ tld_suffix }} nginx-ingress-controller.default.svc.cluster.local
                  errors
                  health {
                    lameduck 5s
                  }
                  ready
                  kubernetes cluster.local in-addr.arpa ip6.arpa {
                    pods insecure
                    fallthrough in-addr.arpa ip6.arpa
                    ttl 30
                  }
                  prometheus :9153
                  forward . /etc/resolv.conf
                  cache 30
                  loop
                  reload
                  loadbalance
              }
      tags: ["hosts"]

    - name: create /etc/hosts records
      become: yes
      lineinfile:
        path: /etc/hosts
        line: "{{ item.address }} {{ item.host }}"
        create: yes
      with_items: "{{ hosts_records }}"
      tags: ["hosts"]

    - name: display hostnames
      debug:
        msg:
          - "Concourse CI:    http://{{ ci_host }}:{{ kind_port_mapping_host }}"
          - "Config-server:   http://{{ api_host }}:{{ kind_port_mapping_host }}"
          - "Chartmuseum:     http://{{ helm_host }}:{{ kind_port_mapping_host }}"
          - "Docker Registry: http://{{ docker_host }}:{{ kind_port_mapping_host }}/v2/_catalog"
      tags: ["hosts"]

  vars:
    cert_cmd: kubectl config view -o jsonpath='{.users[?(@.name == "kind-demo-env")].user.client-certificate-data}' --raw
    key_cmd: kubectl config view -o jsonpath='{.users[?(@.name == "kind-demo-env")].user.client-key-data}' --raw
    cacert_cmd: kubectl config view -o jsonpath='{.clusters[?(@.name == "kind-demo-env")].cluster.certificate-authority-data}' --raw

- name: Destroy demo kubernetes environment
  hosts: localhost
  gather_facts: no
  tasks:
    - name: delete kind cluster
      kind:
        name: "{{ kind_cluster_name }}"
        action: delete
      tags: [ never, cleanup ]

    - name: delete temp files
      file:
        path: "{{ item }}"
        state: absent
      with_items:
        - "{{ kind_cluster_config_path }}"
        - "{{ ci_pipeline_vars_file }}"
        - "{{ ci_fly_path }}"
      tags: [ never, cleanup ]

    - name: delete /etc/hosts records
      become: yes
      lineinfile:
        path: /etc/hosts
        line: "{{ item.address }} {{ item.host }}"
        state: absent
      with_items: "{{ hosts_records }}"
      tags: [ never, cleanup ]
